"use strict";(self.webpackChunkregla_docs=self.webpackChunkregla_docs||[]).push([[5431],{7908:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"code-breakdown/by-file/consumer","title":"consumer.py","description":"This file consists of code that handles Kafka connection.","source":"@site/docs/code-breakdown/by-file/consumer.md","sourceDirName":"code-breakdown/by-file","slug":"/code-breakdown/by-file/consumer","permalink":"/edelweiss-documenation/docs/code-breakdown/by-file/consumer","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"consumer.py","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"import_data_from_db.py","permalink":"/edelweiss-documenation/docs/code-breakdown/by-file/import-data-from-db"},"next":{"title":"preprocess_data.py","permalink":"/edelweiss-documenation/docs/code-breakdown/by-file/preprocess-data"}}');var t=r(4848),o=r(8453);const c={title:"consumer.py",sidebar_position:1},i="\ud83d\udcc2 File : consumer.py",a={},d=[{value:"<strong>\u2699\ufe0f load_dotenv()</strong>",id:"\ufe0f-load_dotenv",level:2},{value:"<strong>\u2699\ufe0f run_script(script_name)</strong>",id:"\ufe0f-run_scriptscript_name",level:2},{value:"<strong>\u2699\ufe0f cons()</strong>",id:"\ufe0f-cons",level:2}];function l(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"-file--consumerpy",children:"\ud83d\udcc2 File : consumer.py"})}),"\n",(0,t.jsx)(n.p,{children:"This file consists of code that handles Kafka connection."}),"\n",(0,t.jsx)(n.h2,{id:"\ufe0f-load_dotenv",children:(0,t.jsx)(n.strong,{children:"\u2699\ufe0f load_dotenv()"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"from dotenv import load_dotenv\r\nload_dotenv()\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Function Description"}),(0,t.jsx)(n.br,{}),"\n","To import .env that contains credentials needed for Kafka and database connection."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"kafka_user = os.getenv('KAFKA_USERNAME')  # Access the loaded variables\r\nkafka_password = os.getenv('KAFKA_PASSWORD')\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Get kafka username and password credentials from the .env file imported before."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"More Information"}),(0,t.jsx)(n.br,{}),"\n","Refer to the .env file"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"\ufe0f-run_scriptscript_name",children:(0,t.jsx)(n.strong,{children:"\u2699\ufe0f run_script(script_name)"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'def run_script(script_name):\r\n    subprocess.run(["python", script_name])\n'})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Function Description"}),(0,t.jsx)(n.br,{}),"\n","Executing ",(0,t.jsx)(n.code,{children:"consumer.py"})," in terminal."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)("span",{class:"bold-large",children:(0,t.jsx)(n.strong,{children:"\ud83d\udccc Parameters"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"script_name"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:"consumer.py as default"})]})})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"\ufe0f-cons",children:(0,t.jsx)(n.strong,{children:"\u2699\ufe0f cons()"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def cons():\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Function Description"}),(0,t.jsx)(n.br,{}),"\n","Accept and pass request to engine, executing requested process."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)("span",{class:"bold-large",children:(0,t.jsx)(n.strong,{children:"\ud83d\udccc Outputs"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:"Error or success message."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:"Type element and activity code."})]})]})]}),"\n",(0,t.jsx)("span",{class:"bold-large",children:(0,t.jsx)(n.strong,{children:"\ud83d\udccc Raises"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Error Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"KafkaError._PARTITION_EOF"})}),(0,t.jsx)(n.td,{children:"Error caused by partition error."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"KafkaException"})}),(0,t.jsx)(n.td,{children:"Any other error outside partition error."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"SystemError"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"type_element"})," doesn\u2019t exists in the function mapping.."]})]})]})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)("span",{class:"bold-large",children:(0,t.jsx)(n.strong,{children:"\ud83d\udd37 Step 1 : Establish Connection to Kafka"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"running = True\r\n\r\n    consumer = Consumer({'bootstrap.servers': 'kafka-dev.regla.cloud:9092',\r\n                        'group.id': 'ReglaGroupsWorkFlowPython',\r\n                        'auto.offset.reset': 'earliest', # jika mau push ganti jadi 'earliest'\r\n                        #'auto.offset.reset': 'latest',\r\n                        'max.poll.interval.ms': 80000000,\r\n                        'session.timeout.ms': 6000,\r\n                         # 'queued.min.messages':1000000,\r\n                         # 'heartbeat.interval.ms':10000,\r\n                         # 'socket.timeout.ms':60000,\r\n                        'sasl.username': kafka_user,\r\n                        'sasl.password': kafka_password,\r\n                        'security.protocol': 'SASL_SSL',\r\n                        'enable.ssl.certificate.verification': 'false',\r\n                        'sasl.mechanism': 'PLAIN'})\r\n    # consumer.subscribe(['WorkflowModellingPython'])\r\n    # Topic\r\n    topic='^WorkflowModellingPython-*' # untuk git push uncomment ini #production\r\n    # topic = 'DataframeErrorHandling'  # git push comment ini #development\r\n    #topic = 'Python-VicaHyundai'\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"This code initializes Kafka that:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Connects to a Kafka cluster at ",(0,t.jsx)(n.code,{children:"kafka-dev.regla.cloud:9092"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Belongs to the consumer group ",(0,t.jsx)(n.code,{children:"ReglaGroupsWorkFlowPython"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Topic : to separate every message received."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)("span",{class:"bold-large",children:(0,t.jsx)(n.strong,{children:"\ud83d\udd37 Step 2 : Produce Message Checking"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"try:\r\n        consumer.subscribe([topic])\r\n        while running:\r\n            # Poll for message\r\n            # print('Run Kafka')\r\n            # msg = consumer.poll(timeout=2.0)\r\n            msg = consumer.poll(100)\r\n            if msg is None:\r\n                continue\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Checking if produce message exists. Kafka will continue asking for message input until time-out."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)("span",{class:"bold-large",children:(0,t.jsx)(n.strong,{children:"\ud83d\udd37 Step 3 : Error Handler"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"    # Handle Error\r\n            if msg.error():\r\n                if msg.error().code() == KafkaError._PARTITION_EOF:\r\n                    # End of partition event\r\n                    print('---------\x3e Error Consumer.....')\r\n                    sys.stderr.write('%% %s [%d] reached end at offset %d\\n' %\r\n                                     (msg.topic(), msg.partition(), msg.offset()))\r\n            elif msg.error():\r\n                raise KafkaException(msg.error())\r\n            else:\r\n                # Handle Message\r\n                print('---------\x3e Got message Sending Element.....')\r\n\r\n                print('topic: %s partition:%d at offset: %d with key: %s:' %\r\n                      (msg.topic(), msg.partition(), msg.offset(),\r\n                       str(msg.key())))\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Check for error in produce message. If no error found, proceed to show message and continue process."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)("span",{class:"bold-large",children:(0,t.jsx)(n.strong,{children:"\ud83d\udd37 Step 4 : Processing Produce Message"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"                record = json.loads(msg.value().decode('utf-8'))\r\n                datakafka = json.loads(record['DataToken'])\r\n                type_element = datakafka[\"type_element\"]\r\n                activity_code = datakafka[\"activity_code\"]\r\n\r\n                print(type_element)\r\n                print(activity_code)\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Get \u201cData Token\u201d from produce message and retrieve type element and activity code."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)("span",{class:"bold-large",children:(0,t.jsx)(n.strong,{children:"\ud83d\udd37 Step 5 : Connect to database"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"                 conn = get_connection()\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Fetches a database connection object. If unavailable, processing halts."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Referenced Function"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.a,{href:"/docs/code-breakdown/by-file/db-connect#%EF%B8%8F-get_connection",children:"db-connect.py \u27a1\ufe0f get_connection()"})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)("span",{class:"bold-large",children:(0,t.jsx)(n.strong,{children:"\ud83d\udd37 Step 6 : Creating Function Mapping Dictionary"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"            \tfunction_mapping = {\r\n                    'DataCleansings': cleandata,\r\n                    'TransformationMEV': mevtransformation,\r\n                    'TransformationODR': odrtransformation,\r\n                    'StationarityDataTest': adf_test,\r\n                    'CorrelationTest': correlationtest,\r\n                    'ExpectedTrend': expected_trend_test,\r\n                    'MEVCombination': combine_mev,\r\n                    'MEVClustering': cluster_mev,\r\n                    'RegressionTest': linear_regression,\r\n                    'ForecastMEV': arima_test,\r\n                    'ForecastMEVTransform': forecast_mev_transform,\r\n                    'WeightingScenario': scalar_weight_scenario,\r\n                    'PredictedODR': predict_odr\r\n                }\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Each keys in the dictionary represents the elements in a workflow, where all functions would be called based on the ",(0,t.jsx)(n.code,{children:"type_element"})," value."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)("span",{class:"bold-large",children:(0,t.jsx)(n.strong,{children:"\ud83d\udd37 Step 7 : Status Check"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"                detail_status = check_status(conn,activity_code)\r\n                status = detail_status[detail_status['activity_code']\r\n                                        == activity_code]['run_status'].values[0]\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Extracts ",(0,t.jsx)(n.code,{children:"run_status"})," from ",(0,t.jsx)(n.code,{children:"detail_status"}),", where ",(0,t.jsx)(n.code,{children:"detail_status"})," data is retrieved from matching the given activity_code."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Referenced Function"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.a,{href:"/docs/code-breakdown/by-file/import-data-from-db#%EF%B8%8F-check_statusconnpkid",children:"db-connect.py \u27a1\ufe0f check_status(conn, pkid)"})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)("span",{class:"bold-large",children:(0,t.jsx)(n.strong,{children:"\ud83d\udd37 Step 8 : Status Check"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"                 if status != 'cancelled':\r\n                    if type_element in function_mapping:\r\n                        function_mapping[type_element](activity_code)\r\n                        consumer.commit()\r\n                    else:\r\n                        raise SystemError(f\"Unknown {type_element}!\")\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"If the status is not \u201ccancelled\u201d, check for type_element in function_mapping. If type_element found, run the element functions along with parameters passed from the activity code."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>i});var s=r(6540);const t={},o=s.createContext(t);function c(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);